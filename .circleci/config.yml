version: 2.1
jobs:
  build:
    docker:
      - image: fr3akyphantom/droid-builder:latest
    environment:
      GitHubMail: 'ricoananda.9c26@gmail.com' # Enter GitHub User EMail Address. Has been set in context.
      GitHubName: 'rico192' # Enter GitHub Username. Has been set in context.
      ## Add the following Token in encrypted form inside CircleCI
      # GITHUB_TOKEN: '' # GitHub OAuth Token, for release. Has been set in context.
      KS: 'https://github.com/rico192/android_kernel_xiaomi_santoni.git' # The Full URL of DT
      Branch: 'q/caf-3.18'
      TC_ARM64: 'https://github.com/LineageOS/android_prebuilts_gcc_linux-x86_aarch64_aarch64-linux-android-4.9.git'
      TC_ARM: 'https://github.com/ProtoChuz/toolchains.git'
      ANY_KERNEL3: 'https://github.com/rico192/anykernel3.git'
    working_directory: /home/builder/kernel/
    steps:
    # - checkout
      - run:
          name: Check if all env vars are set or not
          command: |
            # Do not modify this part
            if [[ -z ${KS} ]]; then
              echo -e "\n KS URL is not given.\n Can not proceed." && exit 1
            elif [[ -z ${Branch} ]]; then
              echo -e "\n bRANCH Name not given." && exit 1
            elif [[ -z ${TC_ARM64} ]]; then
              echo -e "\n TCARM64 Codename not given." && exit 1
            elif [[ -z ${TC_ARM} ]]; then
              echo -e "\n TC_ARM Codename not given." && exit 1
            elif [[ -z ${ANY_KERNEL3} ]]; then
              echo -e "\n ANY_KERNEL3 Codename not given." && exit 1
            fi

            if [[ -z $GitHubName ]]; then
              echo -e "\n GitHub Username is not set." && exit 1
            elif [[ -z $GitHubMail ]]; then
              echo -e "\n GitHub E-mail Address is not set." && exit 1
            fi

            if [[ -z ${GITHUB_TOKEN} ]]; then
              echo -e "\n GitHub OAuth Token not set. Can not Upload Built File on GitHub Releases."
            fi
      - run:
          name: Create & Run a keep-alive shell
          command: |
            # Basic trick to ping every 5 minutes in the background
            cat \<< EOF > /tmp/act.sh
            #!/bin/bash
            while true; do
              echo -e "\n" && sleep 300
            done
            EOF
            chmod a+x /tmp/act.sh
      - run:
          name: Building
          command: |
            # Set Git Credential
            git config --global user.email $GitHubMail
            git config --global user.name $GitHubName
            git config --global color.ui true
            git config --global credential.helper store
            git clone ${KS} -b ${Branch} kernel --depth=1
            git clone ${TC_ARM64} arm64
            git clone ${TC_ARM} arm -b 4.9-32
            cd kernel
            mkdir -p out
            export ARCH=arm64
            export SUBARCH=arm
            export CROSS_COMPILE=/home/builder/kernel/arm64/bin/aarch64-linux-android-
            export CROSS_COMPILE_ARM32=/home/builder/kernel/arm/bin/arm-linux-gnueabi-
            make O=out clean
            make O=out mrproper
            make O=out santoni_defconfig 2>&1 > /tmp/log.txt
            make O=out -j$(nproc --all) 2>&1 > /tmp/log.txt
            cd /
            git clone ${ANY_KERNEL3} zip --depth=1
            mkdir release
            cp /home/builder/kernel/kernel/out/arch/arm64/boot/Image.gz-dtb zip/
            zip -r PREDATOR-santoni.zip /zip/* 2>&1 > /tmp/log.txt
            cp PREDATOR-santoni.zip /release/ 2>&1 > /tmp/log.txt
      - run:
          name: Upload Log
          command: |
            ls -a .
            curl -F "file=@log.txt" https://file.io || true
          working_directory: /tmp
          when: always
      - run:
          name: Release all built files
          command: |
            curl -F document=@release/PREDATOR-santoni.zip https://api.telegram.org/bot835531831:AAFe0klshiqGzbWjJvnKrQfyxMRz-hRirL4/sendDocument?chat_id=-1001478864606

workflows:
  version: 2
  kernel-builder:
    jobs:
      - build:
          context: personal-envs
